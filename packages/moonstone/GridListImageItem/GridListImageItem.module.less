@import '../styles/mixins.less';
@import '../styles/variables.less';
@import '../styles/skin.less';

.gridListImageItem {
	// POC: Remove Spotlight border, then enlarge an image
	// box-sizing: border-box;
	// border-width: @moon-spotlight-outset;
	// border-style: solid;

	// POC: Enlarge an image when getting Spot
	@-webkit-keyframes expand {
		// Old Blink/Webkit doesn't support "@keyframes" so we must use both prefixed and non-prefixed in this section
		100% {
			-webkit-transform: translateZ(0) scale(@moon-gridlist-item-scale-up);
			transform: translateZ(0) scale(@moon-gridlist-item-scale-up);
		}
	}

	@keyframes expand {
		100% { transform: translateZ(0) scale(@moon-gridlist-item-scale-up); }
	}

	.icon {
		width: @moon-gridlist-item-overlay-icon-size;
		height: @moon-gridlist-item-overlay-icon-size;
		line-height: @moon-gridlist-item-overlay-icon-size;
		position: relative;
		display: block;
		border-width: @moon-button-border-width;
		border-style: solid;
		border-radius: 50%;
		margin: 0;
		opacity: 0.5;
	}

	&.selected {
		.icon {
			opacity: 1;
		}
	}

	.caption {
		.moon-header-title-below-text();
		// POC: Position a caption absolutely
		// padding-top: @moon-gridlist-item-caption-padding-top;

		position: absolute;
		width: calc(100% - (2 * @moon-spotlight-outset));
		margin: auto;
		bottom: 30px;
		left: 0;
		right: 0;

		// POC: Hide a caption if not getting focus
		will-change: transform;
		transform: translate3d(100%, 100%, 0);
	}

	.subCaption {
		.moon-body-text();
		padding-top: @moon-gridlist-item-caption-padding-top;
	}

	.image {
		/* Public Class Names */
		// POC: Prepare to enlarge an image when getting focus
		position: absolute;
		width: calc(100% - (2 * @moon-spotlight-outset));
		height: calc(100% - (2 * @moon-spotlight-outset));
		margin: auto;
		top: 0;
		bottom: 0;
		left: 0;
		right: 0;
		z-index: -1;

		transform: translateZ(0);
		will-change: transform;

		animation-duration: 0.2s;
		animation-iteration-count: 1;
		animation-timing-function: ease-out;
		animation-fill-mode: forwards;
	}

	// Skin colors
	.applySkins({
		border-color: transparent;
		color: @moon-gridlist-item-color;

		.icon {
			background-color: @moon-gridlist-item-icon-bg-color;
			border-color: @moon-gridlist-item-icon-border-color;
			color: transparent;
		}

		.caption,
		.subCaption {
			// POC: DO not change a text color.
			color: @moon-gridlist-item-selected-color;
		}

		&.selected {
			// POC: Remove Spotlight border, then enlarge an image
			// border-color: @moon-gridlist-item-selected-border-color;
			// background-color: @moon-gridlist-item-selected-bg-color;

			.icon {
				// POC: Remove Spotlight border, then enlarge an image
				// border-color: @moon-gridlist-item-selected-icon-border-color;
				color: @moon-gridlist-item-selected-icon-color;
			}
			// POC: a text color is always same
			// .caption,
			// .subCaption {
			// 	color: @moon-gridlist-item-selected-color;
			// }
		}

		.focus({
			// POC: Remove Spotlight border, then enlarge an image
			// border-color: @moon-gridlist-item-spotlight-border-color;
			// background-color: @moon-gridlist-item-spotlight-bg-color;
			.image {
				// POC: Enlarge an image
				animation-name: expand;
			}

			.icon {
				color: @moon-gridlist-item-spotlight-icon-color;
			}

			.caption,
			.subCaption {
				// POC: a text color is always same
				// color: @moon-gridlist-item-spotlight-color;
				transform: translate3d(0, 0, 0);
			}

			&.selected {
				.icon {
					color: @moon-gridlist-item-spotlight-selected-icon-color;
				}
			}
		});
	});
}

.muted({
	.gridListImageItem {
		// Skin colors
		.applySkins({
			.focus({
				&:not(.selected) {
					border-color: transparent;
					background-color: transparent;

					.caption,
					.subCaption {
						color: @moon-body-text-color;
					}
					.icon {
						color: transparent;
					}
				}
				&.selected {
					.icon {
						// POC: Remove Spotlight border, then enlarge an image
						// border-color: @moon-accent;
						color: @moon-accent;
					}
				}
			});
		});
	}
}, parent);
